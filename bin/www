#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('drawing-tool:server');
const http = require('http');
const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

const io = app.io;
io.attach(server);

function normalizePort(val) {
    const port = parseInt(val, 10);
    return isNaN(port) ? val : (port >= 0 ? port : false);
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    const bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requiere privilegios');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' esta en uso');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Escuchando en ' + bind);
}